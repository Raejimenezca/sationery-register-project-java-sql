package stationary;

import java.sql.*;
import java.io.*;
import javax.swing.JOptionPane;
import java.io.File;


/**
 *
 * @author Rafael_jz
 */
public class Interfaz extends javax.swing.JFrame {

    // variables de la base de datos
    static Connection conn;
    static Statement sentencia;
    static ResultSet resultado;
    static String clave = "light1964";

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        nom_prod2 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        results = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        busqueda = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        insertar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        nom_prod = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cant = new javax.swing.JTextField();
        precio = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        id_registro = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cant_registro_ID = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        registrar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        reg_por_nombre = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        precio_unitario = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        cant_registro_nombre = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        n_nombre = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        n_cantidad = new javax.swing.JTextField();
        n_precio = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        actualizar = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        id_actualizar = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        id_eliminar = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        total = new javax.swing.JButton();
        clave_total = new javax.swing.JTextField();
        total1 = new javax.swing.JButton();
        clave_eliminar = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();

        jLabel6.setText("Cantidad del producto:");

        jLabel12.setText("INSERCIONES:");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        results.setColumns(20);
        results.setRows(5);
        jScrollPane1.setViewportView(results);

        jLabel1.setText("BUSCADOR:");

        busqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busquedaActionPerformed(evt);
            }
        });

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("ID --- NOMBRE_PROD --- CANTIDAD --- PRECIO_UNIT");

        insertar.setText("Insertar producto");
        insertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertarActionPerformed(evt);
            }
        });

        jLabel3.setText("INSERCIONES:");

        jLabel4.setText("Nombre del producto:");

        jLabel5.setText("Cantidad del producto:");

        jLabel7.setText("Precio unitario:");

        jLabel8.setText("REGISTRO:");

        id_registro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_registroActionPerformed(evt);
            }
        });

        jLabel9.setText("Registrar por ID:");

        jLabel10.setText("Cantidad:");

        registrar.setText("Registrar");
        registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarActionPerformed(evt);
            }
        });

        jLabel11.setText("<-- presionar una sola vez !");

        jLabel13.setText("Registrar por nombre:");

        reg_por_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reg_por_nombreActionPerformed(evt);
            }
        });

        jLabel14.setText("Precio unitario:");

        precio_unitario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precio_unitarioActionPerformed(evt);
            }
        });

        jLabel15.setText("Cantidad:");

        jLabel16.setText("-----------------------------------------------");

        jLabel18.setText("---------------------------------------------------------");

        jLabel17.setText("Nuevo nombre:");

        jLabel19.setText("Nueva cantidad:");

        jLabel20.setText("Nuevo precio:");

        actualizar.setText("Actualizar");
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });

        jLabel21.setText("ACTUALIZACIONES:");

        jLabel22.setText("ID del producto a actualizar:");

        jLabel23.setText("ELIMINAR PRODUCTO:");

        id_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_eliminarActionPerformed(evt);
            }
        });

        jLabel24.setText("ID producto a eliminar:");

        jLabel25.setText("--------------------------------------------");

        total.setText("TOTAL");
        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });

        clave_total.setText("clave total");

        total1.setText("Eliminar");
        total1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                total1ActionPerformed(evt);
            }
        });

        clave_eliminar.setText("clave eliminar");

        jLabel26.setText("---------------------------------------------");

        jLabel27.setText("TOTAL DEL REGISTRO");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cant_registro_ID, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel9)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(id_registro, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(precio_unitario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel14))
                                    .addComponent(jLabel15)
                                    .addComponent(cant_registro_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(reg_por_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton1))
                                .addComponent(insertar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(nom_prod)
                                .addComponent(jLabel5)
                                .addComponent(cant)
                                .addComponent(jLabel7)
                                .addComponent(precio, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel16)
                            .addComponent(jLabel8)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(registrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(actualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel21)
                            .addComponent(jLabel17)
                            .addComponent(n_nombre)
                            .addComponent(jLabel19)
                            .addComponent(n_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)
                            .addComponent(n_precio, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24)
                            .addComponent(jLabel23)
                            .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(id_actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(id_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(total1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clave_eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                            .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel27)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(total)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(clave_total, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel3)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nom_prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(insertar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(id_actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(n_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(n_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(n_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(actualizar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(id_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(total1)
                            .addComponent(clave_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel27)
                        .addGap(59, 59, 59))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(id_registro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cant_registro_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reg_por_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(cant_registro_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)
                                .addComponent(precio_unitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(total)
                        .addComponent(clave_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(registrar)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(128, 128, 128))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void busquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_busquedaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        results.setText("");
        results.setText(buscar(busqueda.getText()));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void insertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertarActionPerformed

        results.setText("");
        if ((!"".equals(nom_prod.getText())) && (Integer.parseInt(precio.getText()) != 0)) {
            results.setText(insertar(nom_prod.getText(), Integer.parseInt(cant.getText()), Integer.parseInt(precio.getText())));
        } else {
            results.setText("Los datos ingresados son invalidos");
        }
        JOptionPane.showMessageDialog(null, "El producto: " + nom_prod.getText() + " ha sido insertado con exito", "Insercion exitosa", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_insertarActionPerformed

    private void registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarActionPerformed
        results.setText("");
        // en este caso registra el producto respecto al ID que tiene en la base de datos
        if (!"".equals(id_registro.getText())) {
            results.append(registrar(Integer.parseInt(id_registro.getText()), Integer.parseInt(cant_registro_ID.getText())));
            JOptionPane.showMessageDialog(null, "El producto con id: " + id_registro.getText() + " ha sido registrado con exito", "Registro exitoso", JOptionPane.INFORMATION_MESSAGE);
        } // en este caso registra el producto con el nombre dado y su respectiva cantidad de compra y precio unitario
        else {
            results.append(registrar_por_nombre(reg_por_nombre.getText(), cant_registro_nombre.getText(), precio_unitario.getText()));
            JOptionPane.showMessageDialog(null, "El producto " + reg_por_nombre.getText() + " ha sido registrado con exito", "Registro exitoso", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_registrarActionPerformed

    private void id_registroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_registroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_registroActionPerformed

    private void reg_por_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reg_por_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reg_por_nombreActionPerformed

    private void precio_unitarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precio_unitarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_precio_unitarioActionPerformed

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
        results.setText("");
        actualizar(Integer.parseInt(id_actualizar.getText()), n_nombre.getText(), Integer.parseInt(n_cantidad.getText()), Integer.parseInt(n_precio.getText()));
        results.setText("El producto con ID " + id_actualizar.getText() + " ha sido actualizado con exito");
        JOptionPane.showMessageDialog(null, "El producto con ID " + id_actualizar.getText() + " ha sido actualizado con exito", "Actualizacion exitosa", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_actualizarActionPerformed

    private void id_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_eliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_eliminarActionPerformed

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        if (clave_total.getText().equals(clave)) {
            JOptionPane.showMessageDialog(null, "Total del registro: " + total(), "Total", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "La clave ingresada no es valida", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_totalActionPerformed

    private void total1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_total1ActionPerformed
        results.setText("");
        if (clave_eliminar.getText().equals(clave)) {
            eliminar(Integer.parseInt(id_eliminar.getText()));
            results.setText("El producto con id: " + id_eliminar.getText() + " ha sido eliminado con exito");
            JOptionPane.showMessageDialog(null, "El producto con id: " + id_eliminar.getText() + " ha sido eliminado con exito", "Eliminar exitoso", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "La clave ingresada no es valida", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_total1ActionPerformed

    public static String buscar(String st) {

        String salida = "";

        try {
            System.out.println("Buscando...");
            resultado = sentencia.executeQuery("SELECT * FROM stationery WHERE pr_name LIKE '%" + st + "%'");

            // Se recorren las tuplas retornadas
            while (resultado.next()) {
                salida = salida + "\n" + (resultado.getInt("id") + " --- " + resultado.getString("pr_name") + " --- " + resultado.getInt("inventory") + " --- " + resultado.getInt("unit_price"));
            }
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
        return salida;
    }

    public static int max_id() {

        int max_id = 0;

        try {
            System.out.println("Buscando...");
            resultado = sentencia.executeQuery("SELECT MAX(id) AS maxid FROM stationery");

            if (resultado.next()) {
                max_id = resultado.getInt("maxid");
            }
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
        return max_id;
    }

    public static String insertar(String prod, int cant, int price) {

        int count = max_id() + 1;
        String salida = "No se pudo insertar";

        try {
            System.out.println("Insertando...");
            String sqlstmt = "INSERT INTO stationery VALUES (" + count + ",'" + prod + "'," + cant + "," + price + ")";
            sentencia.executeUpdate(sqlstmt);
            salida = "El producto: " + prod + " ha sido insertad@ con exito";
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        return salida;
    }

    public static String registrar(int ID_reg, int cant_reg) {

        int new_cant;
        int precio_reg;
        String prod = "";
        String SQLstmt;

        try {
            System.out.println("Buscando...");
            resultado = sentencia.executeQuery("SELECT * FROM stationery WHERE id = " + ID_reg);
            while (resultado.next()) {

                prod = resultado.getString("pr_name");

                if (resultado.getInt("inventory") - cant_reg > 0) {
                    new_cant = resultado.getInt("inventory") - cant_reg;
                    precio_reg = cant_reg * resultado.getInt("unit_price");
                    SQLstmt = "UPDATE stationery SET id = " + resultado.getInt("id") + ", pr_name = '" + prod + "', inventory = " + new_cant + ", unit_price = " + resultado.getInt("unit_price") + " WHERE id = " + ID_reg;
                    sentencia.execute(SQLstmt);
                    guardar_registro(prod, String.valueOf(cant_reg), String.valueOf(precio_reg));
                    System.out.println("Producto registrado con exito");
                } else if (resultado.getInt("inventory") == -1) {
                    precio_reg = cant_reg * resultado.getInt("unit_price");
                    guardar_registro(prod, "-1", String.valueOf(precio_reg));
                } else {
                    System.out.println("No se puede registrar la compra pq el pedido supera las unidades en el inventario");
                }
            }
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
        return "El producto: " + prod + " ha sido registrado con exito\n";
    }

    public static String registrar_por_nombre(String nom_reg, String cant_reg, String precio_u_reg) {

        int total = Integer.parseInt(cant_reg) * Integer.parseInt(precio_u_reg);

        guardar_registro(nom_reg, cant_reg, String.valueOf(total));
        return "El producto " + nom_reg + " ha sido registrado con exito";
    }

    public static void guardar_registro(String prod_a_rg, String cant_a_reg, String total_a_reg) {
        // archivo de registro
        String ruta = "sta_reg.txt";
        File archivo = new File(ruta);
        BufferedWriter bw;

        try {
            if (archivo.exists()) {
                bw = new BufferedWriter(new FileWriter(archivo, true));
                bw.newLine();
                bw.write(prod_a_rg + "," + cant_a_reg + "," + total_a_reg);
            } else {
                bw = new BufferedWriter(new FileWriter(archivo));
                bw.write(prod_a_rg + "," + cant_a_reg + "," + total_a_reg);
            }
            bw.close();
        } catch (IOException e) {
            System.out.println(e.getMessage());
        }

    }

    public static int total() {
        String ruta = "sta_reg.txt";
        //File archivo = new File(ruta);
        int count = 0;
        String linea;
        int sumatoria = 0;

        try {
            BufferedReader leerArchivo = new BufferedReader(new FileReader(ruta));
            while ((linea = leerArchivo.readLine()) != null) {
                //System.out.println("Linea actual: " + linea);
                for (int n = 0; n < linea.length(); n++) {
                    if (linea.charAt(n) == ',') {
                        count++;
                        if (count == 2) {
                            sumatoria = sumatoria + Integer.parseInt(linea.substring(n + 1, linea.length()));
                            count = 0;
                        }
                    }
                }
            }
        } catch (IOException e) {
            System.out.println("Error: " + e.getMessage());
        }

        return sumatoria;
    }

    public static void actualizar(int ID_actualizar, String n_nombre, int n_cantidad, int n_precio) {
        String SQLstmt;

        try {
            System.out.println("Buscando...");
            resultado = sentencia.executeQuery("SELECT * FROM stationery WHERE id = " + ID_actualizar);
            while (resultado.next()) {
                SQLstmt = "UPDATE stationery SET id = " + resultado.getInt("id") + ", pr_name = '" + n_nombre + "', inventory = " + n_cantidad + ", unit_price = " + n_precio + " WHERE id = " + ID_actualizar;
                sentencia.executeQuery(SQLstmt);
            }
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }

    }

    public static void eliminar(int ID_eliminar) {
        String SQLstmt;

        try {
            System.out.println("Buscando...");
            resultado = sentencia.executeQuery("SELECT * FROM stationery WHERE id = " + ID_eliminar);
            while (resultado.next()) {
                SQLstmt = "DELETE FROM stationery WHERE id = " + ID_eliminar;
                sentencia.executeQuery(SQLstmt);
                System.out.println("El producto con id " + resultado.getString("pr_name") + "ha sido eliminado con exito");
            }
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        System.out.println("Conectado a la base de datos de lapiz y papel...");

        try { // Se carga el driver JDBC-ODBC
            Class.forName("oracle.jdbc.driver.OracleDriver");
        } catch (ClassNotFoundException e) {
            System.out.println("No se pudo cargar el driver JDBC");
            return;
        }
        try { // Se establece la conexion con la base de datos
            conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "raejimenezca", "bases2018");
            sentencia = conn.createStatement();
        } catch (SQLException e) {
            System.out.println("No hay conexion con la base de datos");
            return;
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Interfaz().setVisible(true);
        });
    } // FIN DEL MAIN

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar;
    private javax.swing.JTextField busqueda;
    private javax.swing.JTextField cant;
    private javax.swing.JTextField cant_registro_ID;
    private javax.swing.JTextField cant_registro_nombre;
    private javax.swing.JTextField clave_eliminar;
    private javax.swing.JTextField clave_total;
    private javax.swing.JTextField id_actualizar;
    private javax.swing.JTextField id_eliminar;
    private javax.swing.JTextField id_registro;
    private javax.swing.JButton insertar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField n_cantidad;
    private javax.swing.JTextField n_nombre;
    private javax.swing.JTextField n_precio;
    private javax.swing.JTextField nom_prod;
    private javax.swing.JTextField nom_prod2;
    private javax.swing.JTextField precio;
    private javax.swing.JTextField precio_unitario;
    private javax.swing.JTextField reg_por_nombre;
    private javax.swing.JButton registrar;
    private javax.swing.JTextArea results;
    private javax.swing.JButton total;
    private javax.swing.JButton total1;
    // End of variables declaration//GEN-END:variables
}
